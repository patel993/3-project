{"ast":null,"code":"import _slicedToArray from\"/home/xlandroid1/Desktop/react data/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from\"react\";import\"./ForgotPassword.css\";import Loader from\"../layout/Loader/Loader\";import MailOutlineIcon from\"@material-ui/icons/MailOutline\";import{useDispatch,useSelector}from\"react-redux\";import{clearErrors,forgotPassword}from\"../../actions/userAction\";import{useAlert}from\"react-alert\";import MetaData from\"../layout/MetaData\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ForgotPassword=function ForgotPassword(){var dispatch=useDispatch();var alert=useAlert();var _useSelector=useSelector(function(state){return state.forgotPassword;}),error=_useSelector.error,message=_useSelector.message,loading=_useSelector.loading;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var forgotPasswordSubmit=function forgotPasswordSubmit(e){e.preventDefault();var myForm=new FormData();myForm.set(\"email\",email);dispatch(forgotPassword(myForm));};useEffect(function(){if(error){alert.error(error);dispatch(clearErrors());}if(message){alert.success(message);}},[dispatch,error,alert,message]);return/*#__PURE__*/_jsx(Fragment,{children:loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(MetaData,{title:\"Forgot Password\"}),/*#__PURE__*/_jsx(\"div\",{className:\"forgotPasswordContainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"forgotPasswordBox\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"forgotPasswordHeading\",children:\"Forgot Password\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"forgotPasswordForm\",onSubmit:forgotPasswordSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"forgotPasswordEmail\",children:[/*#__PURE__*/_jsx(MailOutlineIcon,{}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",required:true,name:\"email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Send\",className:\"forgotPasswordBtn\"})]})]})})]})});};export default ForgotPassword;","map":{"version":3,"sources":["/home/xlandroid1/Desktop/react data/frontend/src/component/User/ForgotPassword.js"],"names":["React","Fragment","useState","useEffect","Loader","MailOutlineIcon","useDispatch","useSelector","clearErrors","forgotPassword","useAlert","MetaData","ForgotPassword","dispatch","alert","state","error","message","loading","email","setEmail","forgotPasswordSubmit","e","preventDefault","myForm","FormData","set","success","target","value"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,SAApC,KAAqD,OAArD,CACA,MAAO,sBAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,MAAOC,CAAAA,eAAP,KAA4B,gCAA5B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,WAAT,CAAsBC,cAAtB,KAA4C,0BAA5C,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,oBAArB,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3B,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,KAAK,CAAGJ,QAAQ,EAAtB,CAEA,iBAAoCH,WAAW,CAC7C,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACN,cAAjB,EAD6C,CAA/C,CAAQO,KAAR,cAAQA,KAAR,CAAeC,OAAf,cAAeA,OAAf,CAAwBC,OAAxB,cAAwBA,OAAxB,CAIA,cAA0BhB,QAAQ,CAAC,EAAD,CAAlC,wCAAOiB,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,CAAD,CAAO,CAClCA,CAAC,CAACC,cAAF,GAEA,GAAMC,CAAAA,MAAM,CAAG,GAAIC,CAAAA,QAAJ,EAAf,CAEAD,MAAM,CAACE,GAAP,CAAW,OAAX,CAAoBP,KAApB,EACAN,QAAQ,CAACJ,cAAc,CAACe,MAAD,CAAf,CAAR,CACD,CAPD,CASArB,SAAS,CAAC,UAAM,CACd,GAAIa,KAAJ,CAAW,CACTF,KAAK,CAACE,KAAN,CAAYA,KAAZ,EACAH,QAAQ,CAACL,WAAW,EAAZ,CAAR,CACD,CAED,GAAIS,OAAJ,CAAa,CACXH,KAAK,CAACa,OAAN,CAAcV,OAAd,EACD,CACF,CATQ,CASN,CAACJ,QAAD,CAAWG,KAAX,CAAkBF,KAAlB,CAAyBG,OAAzB,CATM,CAAT,CAWA,mBACE,KAAC,QAAD,WACGC,OAAO,cACN,KAAC,MAAD,IADM,cAGN,MAAC,QAAD,yBACE,KAAC,QAAD,EAAU,KAAK,CAAC,iBAAhB,EADF,cAEE,YAAK,SAAS,CAAC,yBAAf,uBACE,aAAK,SAAS,CAAC,mBAAf,wBACE,WAAI,SAAS,CAAC,uBAAd,6BADF,cAGE,cACE,SAAS,CAAC,oBADZ,CAEE,QAAQ,CAAEG,oBAFZ,wBAIE,aAAK,SAAS,CAAC,qBAAf,wBACE,KAAC,eAAD,IADF,cAEE,cACE,IAAI,CAAC,OADP,CAEE,WAAW,CAAC,OAFd,CAGE,QAAQ,KAHV,CAIE,IAAI,CAAC,OAJP,CAKE,KAAK,CAAEF,KALT,CAME,QAAQ,CAAE,kBAACG,CAAD,QAAOF,CAAAA,QAAQ,CAACE,CAAC,CAACM,MAAF,CAASC,KAAV,CAAf,EANZ,EAFF,GAJF,cAgBE,cACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAC,MAFR,CAGE,SAAS,CAAC,mBAHZ,EAhBF,GAHF,GADF,EAFF,GAJJ,EADF,CAuCD,CArED,CAuEA,cAAejB,CAAAA,cAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport \"./ForgotPassword.css\";\nimport Loader from \"../layout/Loader/Loader\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearErrors, forgotPassword } from \"../../actions/userAction\";\nimport { useAlert } from \"react-alert\";\nimport MetaData from \"../layout/MetaData\";\n\nconst ForgotPassword = () => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const { error, message, loading } = useSelector(\n    (state) => state.forgotPassword\n  );\n\n  const [email, setEmail] = useState(\"\");\n\n  const forgotPasswordSubmit = (e) => {\n    e.preventDefault();\n\n    const myForm = new FormData();\n\n    myForm.set(\"email\", email);\n    dispatch(forgotPassword(myForm));\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (message) {\n      alert.success(message);\n    }\n  }, [dispatch, error, alert, message]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <MetaData title=\"Forgot Password\" />\n          <div className=\"forgotPasswordContainer\">\n            <div className=\"forgotPasswordBox\">\n              <h2 className=\"forgotPasswordHeading\">Forgot Password</h2>\n\n              <form\n                className=\"forgotPasswordForm\"\n                onSubmit={forgotPasswordSubmit}\n              >\n                <div className=\"forgotPasswordEmail\">\n                  <MailOutlineIcon />\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    name=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  value=\"Send\"\n                  className=\"forgotPasswordBtn\"\n                />\n              </form>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}