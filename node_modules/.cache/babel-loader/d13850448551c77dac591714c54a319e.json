{"ast":null,"code":"import _objectSpread from\"/home/xlandroid1/Desktop/react data/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/home/xlandroid1/Desktop/react data/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"isAdmin\",\"component\"];import React,{Fragment}from\"react\";import{useSelector}from\"react-redux\";import{Redirect,Route}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";var ProtectedRoute=function ProtectedRoute(_ref){var isAdmin=_ref.isAdmin,Component=_ref.component,rest=_objectWithoutProperties(_ref,_excluded);var _useSelector=useSelector(function(state){return state.user;}),loading=_useSelector.loading,isAuthenticated=_useSelector.isAuthenticated,user=_useSelector.user;return/*#__PURE__*/_jsx(Fragment,{children:loading===false&&/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},rest),{},{render:function render(props){if(isAuthenticated===false){return/*#__PURE__*/_jsx(Redirect,{to:\"/login\"});}if(isAdmin===true&&user.role!==\"admin\"){return/*#__PURE__*/_jsx(Redirect,{to:\"/login\"});}return/*#__PURE__*/_jsx(Component,_objectSpread({},props));}}))});};export default ProtectedRoute;","map":{"version":3,"sources":["/home/xlandroid1/Desktop/react data/frontend/src/component/Route/ProtectedRoute.js"],"names":["React","Fragment","useSelector","Redirect","Route","ProtectedRoute","isAdmin","Component","component","rest","state","user","loading","isAuthenticated","props","role"],"mappings":"+XAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,QAAT,CAAmBC,KAAnB,KAAgC,kBAAhC,C,2CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAgD,IAA7CC,CAAAA,OAA6C,MAA7CA,OAA6C,CAAzBC,SAAyB,MAApCC,SAAoC,CAAXC,IAAW,0CACrE,iBAA2CP,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAjB,EAAD,CAAtD,CAAQC,OAAR,cAAQA,OAAR,CAAiBC,eAAjB,cAAiBA,eAAjB,CAAkCF,IAAlC,cAAkCA,IAAlC,CAEA,mBACE,KAAC,QAAD,WACGC,OAAO,GAAK,KAAZ,eACC,KAAC,KAAD,gCACMH,IADN,MAEE,MAAM,CAAE,gBAACK,KAAD,CAAW,CACjB,GAAID,eAAe,GAAK,KAAxB,CAA+B,CAC7B,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAAP,CACD,CAED,GAAIP,OAAO,GAAK,IAAZ,EAAoBK,IAAI,CAACI,IAAL,GAAc,OAAtC,CAA+C,CAC7C,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAAP,CACD,CAED,mBAAO,KAAC,SAAD,kBAAeD,KAAf,EAAP,CACD,CAZH,GAFJ,EADF,CAoBD,CAvBD,CAyBA,cAAeT,CAAAA,cAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\n  const { loading, isAuthenticated, user } = useSelector((state) => state.user);\n\n  return (\n    <Fragment>\n      {loading === false && (\n        <Route\n          {...rest}\n          render={(props) => {\n            if (isAuthenticated === false) {\n              return <Redirect to=\"/login\" />;\n            }\n\n            if (isAdmin === true && user.role !== \"admin\") {\n              return <Redirect to=\"/login\" />;\n            }\n\n            return <Component {...props} />;\n          }}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}