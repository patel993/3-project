{"ast":null,"code":"import _slicedToArray from\"/home/xlandroid1/Desktop/react data/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from\"react\";import\"./UpdateProfile.css\";import Loader from\"../layout/Loader/Loader\";import MailOutlineIcon from\"@material-ui/icons/MailOutline\";import FaceIcon from\"@material-ui/icons/Face\";import{useDispatch,useSelector}from\"react-redux\";import{clearErrors,updateProfile,loadUser}from\"../../actions/userAction\";import{useAlert}from\"react-alert\";import{UPDATE_PROFILE_RESET}from\"../../constants/userConstants\";import MetaData from\"../layout/MetaData\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UpdateProfile=function UpdateProfile(_ref){var history=_ref.history;var dispatch=useDispatch();var alert=useAlert();var _useSelector=useSelector(function(state){return state.user;}),user=_useSelector.user;var _useSelector2=useSelector(function(state){return state.profile;}),error=_useSelector2.error,isUpdated=_useSelector2.isUpdated,loading=_useSelector2.loading;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),avatar=_useState6[0],setAvatar=_useState6[1];var _useState7=useState(\"/Profile.png\"),_useState8=_slicedToArray(_useState7,2),avatarPreview=_useState8[0],setAvatarPreview=_useState8[1];var updateProfileSubmit=function updateProfileSubmit(e){e.preventDefault();var myForm=new FormData();myForm.set(\"name\",name);myForm.set(\"email\",email);myForm.set(\"avatar\",avatar);dispatch(updateProfile(myForm));};var updateProfileDataChange=function updateProfileDataChange(e){var reader=new FileReader();reader.onload=function(){if(reader.readyState===2){setAvatarPreview(reader.result);setAvatar(reader.result);}};reader.readAsDataURL(e.target.files[0]);};useEffect(function(){if(user){setName(user.name);setEmail(user.email);setAvatarPreview(user.avatar.url);}if(error){alert.error(error);dispatch(clearErrors());}if(isUpdated){alert.success(\"Profile Updated Successfully\");dispatch(loadUser());history.push(\"/account\");dispatch({type:UPDATE_PROFILE_RESET});}},[dispatch,error,alert,history,user,isUpdated]);return/*#__PURE__*/_jsx(Fragment,{children:loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(MetaData,{title:\"Update Profile\"}),/*#__PURE__*/_jsx(\"div\",{className:\"updateProfileContainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"updateProfileBox\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"updateProfileHeading\",children:\"Update Profile\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"updateProfileForm\",encType:\"multipart/form-data\",onSubmit:updateProfileSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"updateProfileName\",children:[/*#__PURE__*/_jsx(FaceIcon,{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Name\",required:true,name:\"name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"updateProfileEmail\",children:[/*#__PURE__*/_jsx(MailOutlineIcon,{}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",required:true,name:\"email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"updateProfileImage\",children:[/*#__PURE__*/_jsx(\"img\",{src:avatarPreview,alt:\"Avatar Preview\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"avatar\",accept:\"image/*\",onChange:updateProfileDataChange})]}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Update\",className:\"updateProfileBtn\"})]})]})})]})});};export default UpdateProfile;","map":{"version":3,"sources":["/home/xlandroid1/Desktop/react data/frontend/src/component/User/UpdateProfile.js"],"names":["React","Fragment","useState","useEffect","Loader","MailOutlineIcon","FaceIcon","useDispatch","useSelector","clearErrors","updateProfile","loadUser","useAlert","UPDATE_PROFILE_RESET","MetaData","UpdateProfile","history","dispatch","alert","state","user","profile","error","isUpdated","loading","name","setName","email","setEmail","avatar","setAvatar","avatarPreview","setAvatarPreview","updateProfileSubmit","e","preventDefault","myForm","FormData","set","updateProfileDataChange","reader","FileReader","onload","readyState","result","readAsDataURL","target","files","url","success","push","type","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport \"./UpdateProfile.css\";\nimport Loader from \"../layout/Loader/Loader\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearErrors, updateProfile, loadUser } from \"../../actions/userAction\";\nimport { useAlert } from \"react-alert\";\nimport { UPDATE_PROFILE_RESET } from \"../../constants/userConstants\";\nimport MetaData from \"../layout/MetaData\";\n\nconst UpdateProfile = ({ history }) => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const { user } = useSelector((state) => state.user);\n  const { error, isUpdated, loading } = useSelector((state) => state.profile);\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [avatar, setAvatar] = useState();\n  const [avatarPreview, setAvatarPreview] = useState(\"/Profile.png\");\n\n  const updateProfileSubmit = (e) => {\n    e.preventDefault();\n\n    const myForm = new FormData();\n\n    myForm.set(\"name\", name);\n    myForm.set(\"email\", email);\n    myForm.set(\"avatar\", avatar);\n    dispatch(updateProfile(myForm));\n  };\n\n  const updateProfileDataChange = (e) => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setAvatarPreview(reader.result);\n        setAvatar(reader.result);\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setEmail(user.email);\n      setAvatarPreview(user.avatar.url);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success(\"Profile Updated Successfully\");\n      dispatch(loadUser());\n\n      history.push(\"/account\");\n\n      dispatch({\n        type: UPDATE_PROFILE_RESET,\n      });\n    }\n  }, [dispatch, error, alert, history, user, isUpdated]);\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <MetaData title=\"Update Profile\" />\n          <div className=\"updateProfileContainer\">\n            <div className=\"updateProfileBox\">\n              <h2 className=\"updateProfileHeading\">Update Profile</h2>\n\n              <form\n                className=\"updateProfileForm\"\n                encType=\"multipart/form-data\"\n                onSubmit={updateProfileSubmit}\n              >\n                <div className=\"updateProfileName\">\n                  <FaceIcon />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    required\n                    name=\"name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </div>\n                <div className=\"updateProfileEmail\">\n                  <MailOutlineIcon />\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    name=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </div>\n\n                <div id=\"updateProfileImage\">\n                  <img src={avatarPreview} alt=\"Avatar Preview\" />\n                  <input\n                    type=\"file\"\n                    name=\"avatar\"\n                    accept=\"image/*\"\n                    onChange={updateProfileDataChange}\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  value=\"Update\"\n                  className=\"updateProfileBtn\"\n                />\n              </form>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default UpdateProfile;\n"]},"metadata":{},"sourceType":"module"}