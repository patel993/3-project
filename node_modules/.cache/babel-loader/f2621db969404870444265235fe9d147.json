{"ast":null,"code":"import _slicedToArray from\"/home/xlandroid1/Desktop/react data/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from\"react\";import\"./ResetPassword.css\";import Loader from\"../layout/Loader/Loader\";import{useDispatch,useSelector}from\"react-redux\";import{clearErrors,resetPassword}from\"../../actions/userAction\";import{useAlert}from\"react-alert\";import MetaData from\"../layout/MetaData\";import LockOpenIcon from\"@material-ui/icons/LockOpen\";import LockIcon from\"@material-ui/icons/Lock\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ResetPassword=function ResetPassword(_ref){var history=_ref.history,match=_ref.match;var dispatch=useDispatch();var alert=useAlert();var _useSelector=useSelector(function(state){return state.forgotPassword;}),error=_useSelector.error,success=_useSelector.success,loading=_useSelector.loading;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),password=_useState2[0],setPassword=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),confirmPassword=_useState4[0],setConfirmPassword=_useState4[1];var resetPasswordSubmit=function resetPasswordSubmit(e){e.preventDefault();var myForm=new FormData();myForm.set(\"password\",password);myForm.set(\"confirmPassword\",confirmPassword);dispatch(resetPassword(match.params.token,myForm));};useEffect(function(){if(error){alert.error(error);dispatch(clearErrors());}if(success){alert.success(\"Password Updated Successfully\");history.push(\"/login\");}},[dispatch,error,alert,history,success]);return/*#__PURE__*/_jsx(Fragment,{children:loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(MetaData,{title:\"Change Password\"}),/*#__PURE__*/_jsx(\"div\",{className:\"resetPasswordContainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"resetPasswordBox\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"resetPasswordHeading\",children:\"Update Profile\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"resetPasswordForm\",onSubmit:resetPasswordSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(LockOpenIcon,{}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"New Password\",required:true,value:password,onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"loginPassword\",children:[/*#__PURE__*/_jsx(LockIcon,{}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Confirm Password\",required:true,value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Update\",className:\"resetPasswordBtn\"})]})]})})]})});};export default ResetPassword;","map":{"version":3,"sources":["/home/xlandroid1/Desktop/react data/frontend/src/component/User/ResetPassword.js"],"names":["React","Fragment","useState","useEffect","Loader","useDispatch","useSelector","clearErrors","resetPassword","useAlert","MetaData","LockOpenIcon","LockIcon","ResetPassword","history","match","dispatch","alert","state","forgotPassword","error","success","loading","password","setPassword","confirmPassword","setConfirmPassword","resetPasswordSubmit","e","preventDefault","myForm","FormData","set","params","token","push","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport \"./ResetPassword.css\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearErrors, resetPassword } from \"../../actions/userAction\";\nimport { useAlert } from \"react-alert\";\nimport MetaData from \"../layout/MetaData\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nconst ResetPassword = ({ history, match }) => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const { error, success, loading } = useSelector(\n    (state) => state.forgotPassword\n  );\n\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const resetPasswordSubmit = (e) => {\n    e.preventDefault();\n\n    const myForm = new FormData();\n\n    myForm.set(\"password\", password);\n    myForm.set(\"confirmPassword\", confirmPassword);\n\n    dispatch(resetPassword(match.params.token, myForm));\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (success) {\n      alert.success(\"Password Updated Successfully\");\n\n      history.push(\"/login\");\n    }\n  }, [dispatch, error, alert, history, success]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <MetaData title=\"Change Password\" />\n          <div className=\"resetPasswordContainer\">\n            <div className=\"resetPasswordBox\">\n              <h2 className=\"resetPasswordHeading\">Update Profile</h2>\n\n              <form\n                className=\"resetPasswordForm\"\n                onSubmit={resetPasswordSubmit}\n              >\n                <div>\n                  <LockOpenIcon />\n                  <input\n                    type=\"password\"\n                    placeholder=\"New Password\"\n                    required\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </div>\n                <div className=\"loginPassword\">\n                  <LockIcon />\n                  <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    required\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  value=\"Update\"\n                  className=\"resetPasswordBtn\"\n                />\n              </form>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}