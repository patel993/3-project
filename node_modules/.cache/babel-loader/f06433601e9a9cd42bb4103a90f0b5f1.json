{"ast":null,"code":"import React,{Fragment}from\"react\";import\"./Cart.css\";import CartItemCard from\"./CartItemCard\";import{useSelector,useDispatch}from\"react-redux\";import{addItemsToCart,removeItemsFromCart}from\"../../actions/cartAction\";import{Typography}from\"@material-ui/core\";import RemoveShoppingCartIcon from\"@material-ui/icons/RemoveShoppingCart\";import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Cart=function Cart(_ref){var history=_ref.history;var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.cart;}),cartItems=_useSelector.cartItems;var increaseQuantity=function increaseQuantity(id,quantity,stock){var newQty=quantity+1;if(stock<=quantity){return;}dispatch(addItemsToCart(id,newQty));};var decreaseQuantity=function decreaseQuantity(id,quantity){var newQty=quantity-1;if(1>=quantity){return;}dispatch(addItemsToCart(id,newQty));};var deleteCartItems=function deleteCartItems(id){dispatch(removeItemsFromCart(id));};var checkoutHandler=function checkoutHandler(){history.push(\"/login?redirect=shipping\");};return/*#__PURE__*/_jsx(Fragment,{children:cartItems.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"emptyCart\",children:[/*#__PURE__*/_jsx(RemoveShoppingCartIcon,{}),/*#__PURE__*/_jsx(Typography,{children:\"No Product in Your Cart\"}),/*#__PURE__*/_jsx(Link,{to:\"/products\",children:\"View Products\"})]}):/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"cartPage\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cartHeader\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Product\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Quantity\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Subtotal\"})]}),cartItems&&cartItems.map(function(item){return/*#__PURE__*/_jsxs(\"div\",{className:\"cartContainer\",children:[/*#__PURE__*/_jsx(CartItemCard,{item:item,deleteCartItems:deleteCartItems}),/*#__PURE__*/_jsxs(\"div\",{className:\"cartInput\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return decreaseQuantity(item.product,item.quantity);},children:\"-\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:item.quantity,readOnly:true}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return increaseQuantity(item.product,item.quantity,item.stock);},children:\"+\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"cartSubtotal\",children:\"\\u20B9\".concat(item.price*item.quantity)})]},item.product);}),/*#__PURE__*/_jsxs(\"div\",{className:\"cartGrossProfit\",children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"cartGrossProfitBox\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Gross Total\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u20B9\".concat(cartItems.reduce(function(acc,item){return acc+item.quantity*item.price;},0))})]}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"checkOutBtn\",children:/*#__PURE__*/_jsx(\"button\",{onClick:checkoutHandler,children:\"Check Out\"})})]})]})})});};export default Cart;","map":{"version":3,"sources":["/home/xlandroid1/Desktop/react data/frontend/src/component/Cart/Cart.js"],"names":["React","Fragment","CartItemCard","useSelector","useDispatch","addItemsToCart","removeItemsFromCart","Typography","RemoveShoppingCartIcon","Link","Cart","history","dispatch","state","cart","cartItems","increaseQuantity","id","quantity","stock","newQty","decreaseQuantity","deleteCartItems","checkoutHandler","push","length","map","item","product","price","reduce","acc"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport \"./Cart.css\";\nimport CartItemCard from \"./CartItemCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addItemsToCart, removeItemsFromCart } from \"../../actions/cartAction\";\nimport { Typography } from \"@material-ui/core\";\nimport RemoveShoppingCartIcon from \"@material-ui/icons/RemoveShoppingCart\";\nimport { Link } from \"react-router-dom\";\n\nconst Cart = ({ history }) => {\n  const dispatch = useDispatch();\n  const { cartItems } = useSelector((state) => state.cart);\n\n  const increaseQuantity = (id, quantity, stock) => {\n    const newQty = quantity + 1;\n    if (stock <= quantity) {\n      return;\n    }\n    dispatch(addItemsToCart(id, newQty));\n  };\n\n  const decreaseQuantity = (id, quantity) => {\n    const newQty = quantity - 1;\n    if (1 >= quantity) {\n      return;\n    }\n    dispatch(addItemsToCart(id, newQty));\n  };\n\n  const deleteCartItems = (id) => {\n    dispatch(removeItemsFromCart(id));\n  };\n\n  const checkoutHandler = () => {\n    history.push(\"/login?redirect=shipping\");\n  };\n\n  return (\n    <Fragment>\n      {cartItems.length === 0 ? (\n        <div className=\"emptyCart\">\n          <RemoveShoppingCartIcon />\n\n          <Typography>No Product in Your Cart</Typography>\n          <Link to=\"/products\">View Products</Link>\n        </div>\n      ) : (\n        <Fragment>\n          <div className=\"cartPage\">\n            <div className=\"cartHeader\">\n              <p>Product</p>\n              <p>Quantity</p>\n              <p>Subtotal</p>\n            </div>\n\n            {cartItems &&\n              cartItems.map((item) => (\n                <div className=\"cartContainer\" key={item.product}>\n                  <CartItemCard item={item} deleteCartItems={deleteCartItems} />\n                  <div className=\"cartInput\">\n                    <button\n                      onClick={() =>\n                        decreaseQuantity(item.product, item.quantity)\n                      }\n                    >\n                      -\n                    </button>\n                    <input type=\"number\" value={item.quantity} readOnly />\n                    <button\n                      onClick={() =>\n                        increaseQuantity(\n                          item.product,\n                          item.quantity,\n                          item.stock\n                        )\n                      }\n                    >\n                      +\n                    </button>\n                  </div>\n                  <p className=\"cartSubtotal\">{`₹${\n                    item.price * item.quantity\n                  }`}</p>\n                </div>\n              ))}\n\n            <div className=\"cartGrossProfit\">\n              <div></div>\n              <div className=\"cartGrossProfitBox\">\n                <p>Gross Total</p>\n                <p>{`₹${cartItems.reduce(\n                  (acc, item) => acc + item.quantity * item.price,\n                  0\n                )}`}</p>\n              </div>\n              <div></div>\n              <div className=\"checkOutBtn\">\n                <button onClick={checkoutHandler}>Check Out</button>\n              </div>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}