{"ast":null,"code":"import _slicedToArray from\"/home/xlandroid1/Desktop/react data/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useEffect,useState}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{useAlert}from\"react-alert\";import{Button}from\"@material-ui/core\";import MetaData from\"../layout/MetaData\";import MailOutlineIcon from\"@material-ui/icons/MailOutline\";import PersonIcon from\"@material-ui/icons/Person\";import VerifiedUserIcon from\"@material-ui/icons/VerifiedUser\";import SideBar from\"./Sidebar\";import{UPDATE_USER_RESET}from\"../../constants/userConstants\";import{getUserDetails,updateUser,clearErrors}from\"../../actions/userAction\";import Loader from\"../layout/Loader/Loader\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UpdateUser=function UpdateUser(_ref){var history=_ref.history,match=_ref.match;var dispatch=useDispatch();var alert=useAlert();var _useSelector=useSelector(function(state){return state.userDetails;}),loading=_useSelector.loading,error=_useSelector.error,user=_useSelector.user;var _useSelector2=useSelector(function(state){return state.profile;}),updateLoading=_useSelector2.loading,updateError=_useSelector2.error,isUpdated=_useSelector2.isUpdated;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),role=_useState6[0],setRole=_useState6[1];var userId=match.params.id;useEffect(function(){if(user&&user._id!==userId){dispatch(getUserDetails(userId));}else{setName(user.name);setEmail(user.email);setRole(user.role);}if(error){alert.error(error);dispatch(clearErrors());}if(updateError){alert.error(updateError);dispatch(clearErrors());}if(isUpdated){alert.success(\"User Updated Successfully\");history.push(\"/admin/users\");dispatch({type:UPDATE_USER_RESET});}},[dispatch,alert,error,history,isUpdated,updateError,user,userId]);var updateUserSubmitHandler=function updateUserSubmitHandler(e){e.preventDefault();var myForm=new FormData();myForm.set(\"name\",name);myForm.set(\"email\",email);myForm.set(\"role\",role);dispatch(updateUser(userId,myForm));};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(MetaData,{title:\"Update User\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(SideBar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"newProductContainer\",children:loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsxs(\"form\",{className:\"createProductForm\",onSubmit:updateUserSubmitHandler,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Update User\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(PersonIcon,{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Name\",required:true,value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(MailOutlineIcon,{}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",required:true,value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(VerifiedUserIcon,{}),/*#__PURE__*/_jsxs(\"select\",{value:role,onChange:function onChange(e){return setRole(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Choose Role\"}),/*#__PURE__*/_jsx(\"option\",{value:\"admin\",children:\"Admin\"}),/*#__PURE__*/_jsx(\"option\",{value:\"user\",children:\"User\"})]})]}),/*#__PURE__*/_jsx(Button,{id:\"createProductBtn\",type:\"submit\",disabled:updateLoading?true:false||role===\"\"?true:false,children:\"Update\"})]})})]})]});};export default UpdateUser;","map":{"version":3,"sources":["/home/xlandroid1/Desktop/react data/frontend/src/component/Admin/UpdateUser.js"],"names":["React","Fragment","useEffect","useState","useSelector","useDispatch","useAlert","Button","MetaData","MailOutlineIcon","PersonIcon","VerifiedUserIcon","SideBar","UPDATE_USER_RESET","getUserDetails","updateUser","clearErrors","Loader","UpdateUser","history","match","dispatch","alert","state","userDetails","loading","error","user","profile","updateLoading","updateError","isUpdated","name","setName","email","setEmail","role","setRole","userId","params","id","_id","success","push","type","updateUserSubmitHandler","e","preventDefault","myForm","FormData","set","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\nimport SideBar from \"./Sidebar\";\nimport { UPDATE_USER_RESET } from \"../../constants/userConstants\";\nimport {\n  getUserDetails,\n  updateUser,\n  clearErrors,\n} from \"../../actions/userAction\";\nimport Loader from \"../layout/Loader/Loader\";\n\nconst UpdateUser = ({ history, match }) => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const { loading, error, user } = useSelector((state) => state.userDetails);\n\n  const {\n    loading: updateLoading,\n    error: updateError,\n    isUpdated,\n  } = useSelector((state) => state.profile);\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n\n  const userId = match.params.id;\n\n  useEffect(() => {\n    if (user && user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setRole(user.role);\n    }\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (updateError) {\n      alert.error(updateError);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success(\"User Updated Successfully\");\n      history.push(\"/admin/users\");\n      dispatch({ type: UPDATE_USER_RESET });\n    }\n  }, [dispatch, alert, error, history, isUpdated, updateError, user, userId]);\n\n  const updateUserSubmitHandler = (e) => {\n    e.preventDefault();\n\n    const myForm = new FormData();\n\n    myForm.set(\"name\", name);\n    myForm.set(\"email\", email);\n    myForm.set(\"role\", role);\n\n    dispatch(updateUser(userId, myForm));\n  };\n\n  return (\n    <Fragment>\n      <MetaData title=\"Update User\" />\n      <div className=\"dashboard\">\n        <SideBar />\n        <div className=\"newProductContainer\">\n          {loading ? (\n            <Loader />\n          ) : (\n            <form\n              className=\"createProductForm\"\n              onSubmit={updateUserSubmitHandler}\n            >\n              <h1>Update User</h1>\n\n              <div>\n                <PersonIcon />\n                <input\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  required\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n              <div>\n                <MailOutlineIcon />\n                <input\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  required\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n\n              <div>\n                <VerifiedUserIcon />\n                <select value={role} onChange={(e) => setRole(e.target.value)}>\n                  <option value=\"\">Choose Role</option>\n                  <option value=\"admin\">Admin</option>\n                  <option value=\"user\">User</option>\n                </select>\n              </div>\n\n              <Button\n                id=\"createProductBtn\"\n                type=\"submit\"\n                disabled={\n                  updateLoading ? true : false || role === \"\" ? true : false\n                }\n              >\n                Update\n              </Button>\n            </form>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UpdateUser;\n"]},"metadata":{},"sourceType":"module"}